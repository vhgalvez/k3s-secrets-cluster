# playbooks/03_render_and_seal_secrets.yml

- name: 🔐 Renderizar y cifrar secretos desde plantillas Jinja2
  hosts: localhost
  become: false
  gather_facts: false

  vars_files:
    - ../vars/main.yml

  vars:
    secrets_templates_dir: secrets-templates
    secrets_rendered_dir: secrets-rendered
    sealed_secrets_output_dir: output-sealed

    secrets_to_process:
      - name: jenkins-admin-secret
        source: jenkins-admin-secret.yaml.j2
        target_subdir: ci
      - name: grafana-admin-secret
        source: grafana-admin-secret.yaml.j2
        target_subdir: monitoring
      - name: prometheus-basic-auth
        source: prometheus-basic-auth.yaml.j2
        target_subdir: monitoring
      - name: argocd-secret
        source: argocd-secret.yaml.j2
        target_subdir: argocd
      - name: longhorn-ui-secret
        source: longhorn-ui-secret.yaml.j2
        target_subdir: longhorn
      - name: traefik-dashboard-secret
        source: traefik-dashboard-secret.yaml.j2
        target_subdir: kube-system
      - name: webhook-github-secret
        source: webhook-github-secret.yaml.j2
        target_subdir: ci
      - name: postgres-secret
        source: postgres-secret.yaml.j2
        target_subdir: default
      - name: smtp-password-secret
        source: smtp-password-secret.yaml.j2
        target_subdir: default

  tasks:
    - name: 📁 Crear carpetas necesarias
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ secrets_rendered_dir }}"
        - "{{ sealed_secrets_output_dir }}"

    - name: 📁 Crear subdirectorios por namespace para secretos cifrados
      file:
        path: "{{ sealed_secrets_output_dir }}/{{ item.target_subdir }}"
        state: directory
        mode: '0755'
      loop: "{{ secrets_to_process }}"
      loop_control:
        label: "{{ item.name }}"

    - name: 📜 Renderizar plantilla Jinja2 → YAML
      template:
        src: "{{ secrets_templates_dir }}/{{ item.source }}"
        dest: "{{ secrets_rendered_dir }}/{{ item.name }}.yaml"
      loop: "{{ secrets_to_process }}"
      loop_control:
        label: "{{ item.name }}"

    - name: 🔐 Cifrar secreto con kubeseal: {{ item.name }}
      command: >
        kubeseal --format yaml \
        --cert {{ pub_cert_path }} \
        < {{ secrets_rendered_dir }}/{{ item.name }}.yaml \
        > {{ sealed_secrets_output_dir }}/{{ item.target_subdir }}/{{ item.name }}-sealed.yaml
      args:
        executable: /bin/bash
      loop: "{{ secrets_to_process }}"
      loop_control:
        label: "{{ item.name }}"